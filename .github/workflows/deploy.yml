name: Deploy Laravel (Split Docroot in public_html)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'          # sesuaikan jika hostingmu beda
          extensions: mbstring, intl, bcmath, gd, pdo, pdo_mysql
          coverage: none

      - name: Composer install (prod)
        run: |
          composer install --no-dev --prefer-dist --no-interaction --optimize-autoloader
          composer dump-autoload --optimize --classmap-authoritative

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'          # sesuaikan jika perlu

      - name: Build assets (Vite)
        run: |
          npm ci
          npm run build

      - name: Create .env from Secrets
        run: |
          cat > .env << 'EOF'
          APP_NAME="Umahkode Lab"
          APP_ENV=production
          APP_DEBUG=false
          APP_URL=${{ secrets.APP_URL }}
          APP_KEY=${{ secrets.APP_KEY }}

          LOG_CHANNEL=stack
          LOG_LEVEL=error

          DB_CONNECTION=mysql
          DB_HOST=${{ secrets.DB_HOST }}
          DB_PORT=${{ secrets.DB_PORT }}
          DB_DATABASE=${{ secrets.DB_DATABASE }}
          DB_USERNAME=${{ secrets.DB_USERNAME }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}

          CACHE_DRIVER=file
          SESSION_DRIVER=file
          QUEUE_CONNECTION=sync
          EOF

      # tanpa terminal di hosting: jangan symlink storage, copy konten publiknya
      - name: Prepare public/storage (no symlink)
        run: |
          rm -rf public/storage
          mkdir -p public/storage
          if [ -d storage/app/public ]; then
            rsync -a storage/app/public/ public/storage/
          fi

      - name: Laravel optimize
        run: |
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache

      # siapkan dua paket: app (private) & public (docroot)
      - name: Prepare two packages (app + public)
        run: |
          rm -rf pkg_app pkg_public
          mkdir -p pkg_app pkg_public

          rsync -a \
            --exclude=".git" \
            --exclude=".github" \
            --exclude="node_modules" \
            --exclude="tests" \
            --exclude="README.md" \
            ./ pkg_app/

          rsync -a public/ pkg_public/

          # patch index.php agar require ke APP_PATH absolut di hosting
          php -r '
            $p = "pkg_public/index.php";
            $c = file_get_contents($p);
            $c = preg_replace(
              "#require __DIR__ . \"/../vendor/autoload.php\";#",
              "require \"${{ secrets.APP_PATH }}/vendor/autoload.php\";",
              $c
            );
            $c = preg_replace(
              "#require_once __DIR__ . \"/../bootstrap/app.php\";#",
              "require_once \"${{ secrets.APP_PATH }}/bootstrap/app.php\";",
              $c
            );
            file_put_contents($p, $c);
          '

      - name: Upload APP (private, under public_html/_apps)
        uses: wlixcc/SFTP-Deploy-Action@v1.2.4
        with:
          server: ${{ secrets.SFTP_HOST }}
          port: ${{ secrets.SFTP_PORT }}
          username: ${{ secrets.SFTP_USER }}
          password: ${{ secrets.SFTP_PASS }}
          local_path: "pkg_app/"
          remote_path: "${{ secrets.APP_PATH }}/"
          sftp_only: true

      - name: Upload PUBLIC (docroot subdomain)
        uses: wlixcc/SFTP-Deploy-Action@v1.2.4
        with:
          server: ${{ secrets.SFTP_HOST }}
          port: ${{ secrets.SFTP_PORT }}
          username: ${{ secrets.SFTP_USER }}
          password: ${{ secrets.SFTP_PASS }}
          local_path: "pkg_public/"
          remote_path: "${{ secrets.DOCROOT_PATH }}/"
          sftp_only: true
